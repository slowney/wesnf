/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SEQTK_SAMPLE' {
        ext.prefix = {"${meta.id}.Downsampled"}
        publishDir = [
            path: { "${params.outdir}/Sampled_Fastqs" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWAMEM2_MEM' {
        ext.args   = '-K 100000000 -R "@RG\\t$ID\\t$SM\\t$LB\\t$PL\\t$PU" -C'
        ext.prefix = {"${meta.id}.Aligned"}
        publishDir = [
            path: { "${params.outdir}/Aligned_Bams" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        cpus= 16
        memory = '32 GB'
    }

    withName: 'PICARD_SORTSAM' {
        ext.prefix = { bam.baseName - ".bam" + "_Sorted" }
        publishDir = [
            path: { "${params.outdir}/PostAlignment" },
            mode: params.publish_dir_mode,
            saveAs: { false }
        ]
    }

    withName: 'PICARD_MARKDUPLICATES' {
        ext.args = '--CREATE_INDEX'
        ext.prefix = {"${meta.id}.Aligned_Sorted_DupMarked"}
        publishDir = [
            path: { "${params.outdir}/PostAlignment" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PICARD_BEDTOINTERVALLIST' {
        ext.prefix = { bed.baseName - ".bed" }
        publishDir = [
            path: { "${params.outdir}/PostAlignment" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'VARDICTJAVA' {
        publishDir = [
            path: { "${params.outdir}/Vardict" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
